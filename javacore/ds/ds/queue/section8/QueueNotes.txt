A Queue is a data structure that stores items in a First-in /First out manner.

As mentioned above the queue is data structure that follows the First-In-First-Out(FIFO) principle,
meaning that the first element added to the queue will be the first one to be removed. 

Why do we need Queue / Where do we use Queue?

=> Utilize the first coming data first, while others wait for their turns.FIFO
=> It is commonly used to manage tasks in a sequential order, such as scheduling processes in an operating system,
handling requests in a web server, or managing tasks in a print queue.

Real Life example where we use the queue:
1. Point sale system of restaurant
2. Printer queue.
3. Call center phone systems.

Queue Operations:

The main Operation in a queue DS are Enqueue and Dequeue, along with a few other supporting operations:

1. Enqueue : This operation adds an element to the end of the queue.
2. Dequeue : This operation removes an element form the the front or beginning of the queue.
3. Peek    : This operation retrieves the element at the front of the queue without removing it.
4. isEmpty : This operation checks if the queue is empty.
5. isFull(for bounded queues): This operation checks if the queue is full.

Different Types of queues:
1. Simple Queue
2. Circular Queue
3. Priority Queue
4. Double-Ended Queue(Deque)
5. Concurrent Queue
6. Delay Queue
7. Bounded Queue


